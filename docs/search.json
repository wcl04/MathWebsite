{
  "articles": [
    {
      "path": "about.html",
      "title": "Data Story",
      "description": "This section is dedicated to a data analysis of the Spotify Songs Album data. This dataset provides  details of 903 music tracks and their performance across various platforms. It includes information like track name, artist(s), release date, and presence in popular playlists and charts on platforms like Spotify, Apple Music, Deezer, and Shazam. Additionally, it features music related variables such as BPM, key, mode, danceability, valence, energy, acousticness, instrumentalness, and liveness and speechiness, which offer insights into the musical characteristics and appeal of each track. With this data, my goal is  to question the relationship of a songs musical key between spotifys charts/playlists and general release date. ",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nBar Chart/Frequency Table\r\n\r\n\r\n\r\nThe key variable represents the musical key (e.g., A, B, C#, etc.) of each track. The bar plot displays the frequency count of each musical key. Proportions are shown below the plot, indicating the relative frequency of each key as a decimal and percentage. C# is the most common key in the dataset, appearing in about 12.6% of tracks. It is followed closely by the G (10.1%), F (9.6%), and the Unknown key (9.5%) key. These keys may be popular in mainstream music due to their harmonic flexibility or genre relations. D# is the least common key with only about 3.3% of tracks. Other less common keys include A# (6.1%) and E (6.5%). This may be due to difficulty in playing or less frequent usage in popular music genres. Overall, while some variation exists, the keys are reasonably well-distributed across the data set. No key(other than D#) appears to be an extreme outlier in frequency.\r\n#Stacked bar charts\r\n\r\n\r\n\r\nWhen looking at this stacked mosaic bar charts there are a few things to note on how a songs key relates to the month. Firstly, the key popularity is mostly consistent across months.There is a consistent green section (representing keys like A, A#, B, C#, etc.) dominating the chart in every month. These keys are more frequently released compared to others. Keys A, A#, B, C# are consistently high across months indicating that they are either more commercially successful or more genre-flexible. There are also slight monthly variations in the distribution like July and September show a larger share for F. April or August being more balanced across more keys.\r\n#Box Plot\r\n\r\n\r\n\r\nAll keys display a generally right-skewed distribution, with many songs clustered at lower chart apparence.Most musical keys have chart appearances heavily concentrated near lower values. The median for almost all keys is low, suggesting that most songs in each key don’t appear frequently in the charts. Nearly every key has outliers, shown as dots to the right of the boxes. These indicate tracks in that key that charted significantly worse than the others. Keys like D, C#, and G have more significant chart representation, indicated by more frequent outliers while Some keys (A#, B, D#) show more clustered points, implying their songs tend to have more predictable performance in the charts.From this we can infer that key choice matters where certain keys appear to have a higher likelihood of charting multiple times (G, F, C#), while others are more stable but less frequently chart-topping (D#, A#).\r\nDensity Plot\r\n\r\n\r\n\r\nWhen looking at the density plot for Spotify chart appearance,The distribution is heavily right-skewed since most of the density is near 0 indicating that the majority of songs do not get substantial chart play, regardless of their key. Additionally all keys have similar mean values suggesting that chart performance is not significantly influenced by musical key alone. No single key appears to dominate in terms of higher mean appearances. With this we can infer that there is no musical key that significantly stands out in terms of average Spotify chart appearances.\r\nHexbin Plot\r\n\r\n\r\n\r\nThis plot shows a hexbin plot, which visualizes the density of data points in two dimensions. The x-axis represents a tracks appearance in Spotify charts while the y-axis shows how many times a track is included in Spottily playlists. The color intensity represents the count of points in each hexagon, with darker colors indicating higher density. With this in mind we can see the most data points are clustered around the high ranking tracks for Spotify charts and playlists. This suggests many tracks appear in a few charts and are included in only a few playlists.\r\nInteractive Scatter Plot\r\n\r\n\r\nBuilding off of the Hexbin plot, this interactive scatter plot aims to demonstrate the relationship of how each individual musical key correlates to Spotify Chart Appearance and Spotify Playlist Appearance.When analyzing each individual key, the most major take away is that each key shows a very weak linear correlation as the two keys with the highest correlation value (D and E) and yield a value of about 0.3.\r\nConclusion:\r\nThe analysis of musical keys in relation to Spotify chart appearances and playlist inclusions provides intriguing insights into how key selection may influence a track’s success. While certain keys, such as C#, G, and F, show higher frequencies in chart appearances, the overall distribution across months remains relatively consistent. This suggests that these keys are either more flexible across genres or more commercially favored for mainstream music. In contrast, keys like D#, A#, and E are less common, potentially due to their structural complexity or niche genre associations. From the mosaic plot analysis, it’s evident that the key distribution does not significantly change across release months. Popular keys maintain their presence year-round, with some minor variations. The hexbin analysis reveals that while many tracks appear in both Spotify charts and playlists, the majority only do so a few times. A large concentration of tracks achieves low visibility, indicating that simply choosing a common key is not enough for breakout success.The density plots further confirm that chart appearances are heavily right-skewed across all keys, with most tracks achieving only minimal visibility. All in all, There is little evidence to suggest that any particular key has a strong influence on average chart performance. This is further supported by the weak linear correlations observed in the scatter plots, where even the most significant key correlations (D and E) only reached values of about 0.3.\r\n\r\n\r\n\r\n",
      "last_modified": "2025-05-08T19:17:35-04:00"
    },
    {
      "path": "index.html",
      "title": "William Lindquist",
      "author": [],
      "contents": "\r\n\r\n          \r\n          \r\n          My Website\r\n          \r\n          \r\n          Home\r\n          Data Story\r\n          Infographic\r\n          Course Visualizations\r\n          ☰\r\n          \r\n          \r\n      \r\n        \r\n          \r\n            \r\n          \r\n            William Lindquist\r\n          \r\n          \r\n            \r\n          \r\n          \r\n            Hello, I’m William Lindquist and welcome to my personal\r\n            data visualization website! This website details and\r\n            compiles some of the projects I have worked on throughout my\r\n            college career. Please take a bit to look around and see\r\n            what I’ve gotten into so far.\r\n            Thanks!\r\n          \r\n          \r\n            \r\n                \r\n                  \r\n                    Email\r\n                  \r\n                \r\n              \r\n                            \r\n                \r\n                  \r\n                    Linkedin\r\n                  \r\n                \r\n              \r\n                          \r\n        \r\n      \r\n    \r\n\r\n    \r\n      \r\n        \r\n          \r\n            \r\n          \r\n            William Lindquist\r\n          \r\n          \r\n            \r\n          \r\n          \r\n            Hello, I’m William Lindquist and welcome to my personal\r\n            data visualization website! This website details and\r\n            compiles some of the projects I have worked on throughout my\r\n            college career. Please take a bit to look around and see\r\n            what I’ve gotten into so far.\r\n            Thanks!\r\n          \r\n        \r\n      \r\n      \r\n          \r\n              \r\n                                \r\n                    \r\n                    Email\r\n                    \r\n                \r\n                                \r\n                    \r\n                    Linkedin\r\n                    \r\n                \r\n                              \r\n          \r\n      \r\n    \r\n\r\n    \r\n    \r\n    ",
      "last_modified": "2025-05-08T19:17:36-04:00"
    },
    {
      "path": "info1.html",
      "title": "Data Story Infographic",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2025-05-08T19:17:38-04:00"
    },
    {
      "path": "past.html",
      "title": "Course Visualizations",
      "description": "This section of my exhibit are some of the highlights of projects I completed in the MATH 230 Data Visualizations and Computing course",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n\r\n\r\n\r\nGenerative Artwork\r\nHome\r\nHomeFire Spiral\r\nFire Spiralggplot Extension Project\r\n\r\n\r\n\r\n\r\n\r\n\r\nbasic ggcorrplot\r\n\r\n\r\n\r\nData set: Electricity1955\r\nVariables:cost,output,labor,labor share, capital, capital share, fuel and fuel share\r\n“ggcorrplot” is used to visualize correlation matrices, which are tables that show the correlation between multiple quantitative variables. The purpose of this package is to make it easier to understand the relationship between variables and identify potential patterns in the data by allowing users to customize their tables. Red boxes indicate a stronger positive correlation, whereas blue boxes imply a more negative correlation.\r\nHierarchical Clustering\r\n\r\n\r\n\r\nWe can reorder the correlation matrix using hierarchical clustering to group similar variables together and add an outline color to the heatmap for better visualization\r\nCorrelation Coefficients and Significance Levels\r\n\r\n\r\n\r\nWe can show correlation coefficients in each cell by using the “lab = TRUE” argument.\r\n\r\n\r\n\r\nInstead of listing all of the correlation coefficients, what if we want to focus on correlations that are significant? We can create a matrix of correlation p-values and store it in a variable called “pvals.mat”, then add the argument “p.mat = pvals.mat” when creating the correlation matrix. If a correlation coefficient has a p-value higher than 0.05, then the correlation is not statistically significant,which is indicated by an “X” in the corresponding cell.\r\nConfidence Interval Dashboard\r\n\r\n\r\nThe main goal behind my dashboard is to demonstrate the concept of confidence\r\nintervals clearly. Since confidence intervals are regarded as one of the most challenging concepts\r\nto grasp in introductory statistics, I sought to use dashboard to tackle this issue. First, it simulates a normally distributed population—adjustable via a sidebar slider—and repeatedly draws samples of a chosen size. Each sample’s mean and its confidence interval are plotted alongside the true population mean, illustrating that at, say, 95% confidence roughly 19 out of 20 intervals will contain the true mean. Second, it tackles categorical data by simulating two groups’ “yes”/“no” response proportions and performing a permutation test: random reassignments create a null distribution of difference‑in‑proportions, with the observed difference shown in red against a blue confidence band. If the red line lies outside that band, group membership significantly influences outcomes. By pairing continuous‑variable CIs with a categorical permutation CI approach, the dashboard demystifies confidence intervals across both data types in a single, interactive tool.\r\nBucknell Data Viz Challenge\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nData set: CollegeData\r\nVariables: Admission Rate and Competition Rate\r\nThis graphic was created to show an interesting visualization and narrative that tells a story about Bucknell in comparison to other Universities in CollegeData dataset. Using this data I found that Bucknell University is approximately the 5.7th percentile when it comes to admission rate, meaning that the school is much tougher to get into then many other universities within the dataset. Additionally it falls in the 96th percentile for completion rate meaning it places near the top universities in the country in terms of student success and graduation outcomes. With these two percentiles in mind you can come to the conclusion that Bucknell is tougher to get into then many other universities, but also provides an environment where students likely to succeed and graduate. This is shown in the visualization where bucknell is shown to be nearly at the top of Completion Rate and on the lower side of the Admission Rate. With having a tough admission rate as well as a impressively high completition rate Bucknell can be seen as a strong example of both academic excellence as well as institutional success.\r\nGetting Fancy with ggplot customizations\r\n\r\n\r\n\r\n\r\n\r\n\r\nData: BikeCommute\r\nVariables: Top Speed and Average Speed.\r\nThis plot was created to demonstrate how to get creative and customize visualizations within ggplot. The data includes 56 observations with 9 total variables and comes from the Lock5Data package. This is graph uses code to make and customize a new theme rather than using a pre-installed one. This visualization was created around valentines day so I wanted it give a vibe based on the holiday. The main take away from this visualization is that it shows a moderately strong postive linear correlation with a correlation value of 0.7118367. Though not crucial on the data department, this graphs was one of my favorites to make as it let me be creative and opened the door to customizing visualization in a way that I like rather then using a template all the time.\r\n\r\n\r\n\r\n",
      "last_modified": "2025-05-08T19:17:41-04:00"
    }
  ],
  "collections": []
}
